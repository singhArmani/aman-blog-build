{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["Paragraph","styled","p","scale","rhythm","UnorderedList","ul","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","style","marginBottom","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"yPASMA,EAAYC,IAAOC,EAAV,uEAAGD,CAAH,uDACXE,aAAM,IAESC,YAAO,GACVA,aAAQ,IAGlBC,EAAgBJ,IAAOK,GAAV,2EAAGL,CAAH,yFAQbM,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKa,YAAYL,MACxBM,YAAad,EAAKa,YAAYC,aAAed,EAAKe,UAEpD,4BAAKf,EAAKa,YAAYL,OACtB,kBAACjB,EAAD,KACGS,EAAKa,YAAYG,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQlB,EAAKmB,QAC7C,wBACEC,MAAO,CACLC,aAAc1B,YAAO,MAGzB,kBAAC,IAAD,MACE,kBAACC,EAAD,KACE,4BACGc,GACC,kBAAC,OAAD,CAAMY,GAAIZ,EAASa,OAAOC,KAAMC,IAAI,QAApC,KACKf,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMW,GAAIX,EAAKY,OAAOC,KAAMC,IAAI,QAC7Bd,EAAKE,YAAYL,MADpB,U,GAjCekB,IAAMC,WA4CtB7B,YAER,IAAM8B,EAAS","file":"component---src-templates-blog-post-js-c671b1810a079f5510b4.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Paragraph = styled.p`\n  ${scale(-1/5)};\n  display: block;\n  margin-bottom: ${rhythm(1)};\n  margin-top: ${rhythm(-1)}\n`\n\nconst UnorderedList = styled.ul`\n  display: flex;\n  flexWrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`\n// Single page template\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <Paragraph>\n          {post.frontmatter.date}\n        </Paragraph>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n          <UnorderedList>\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n        </UnorderedList>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}